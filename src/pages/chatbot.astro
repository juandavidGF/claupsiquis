---
// Layout import
import BaseLayout from '../layouts/BaseLayout.astro';
import Hero from '../components/Hero.astro';
---

<BaseLayout>
	<div class="stack gap-20">
		<div class="wrapper stack gap-8">
			<header class="hero">
				<Hero
					title="AI Chatbot Assistant"
					tagline="Ask me anything about psychology and mental health."
					align="start"
				/>
			</header>

			<div class="flex flex-col h-[600px] max-w-md mx-auto bg-[#f8f9fa] rounded-xl overflow-hidden shadow-lg">
				<div class="bg-[#1a1a1a] p-4">
					<h2 class="text-xl font-bold text-white">Chatbot Assistant</h2>
				</div>
				<div id="chat-history" class="flex-1 overflow-y-auto p-4 space-y-4">
					<!-- Initial message will be added via JavaScript -->
				</div>
				<div class="p-4 border-t bg-white">
					<form id="chat-form" class="flex items-center gap-2">
						<input
							type="text"
							id="user-input"
							placeholder="Type your message..."
							class="flex-1 p-3 bg-[#f8f9fa] rounded-lg border-none focus:outline-none"
						/>
						<button
							type="submit"
							class="p-3 bg-[#1a1a1a] text-white rounded-lg hover:bg-[#2a2a2a] transition-colors"
						>
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M22 2L11 13M22 2L15 22L11 13M11 13L2 9L22 2"/>
							</svg>
						</button>
					</form>
				</div>
			</div>
		</div>
	</div>
</BaseLayout>

<script>
	const form = document.getElementById('chat-form');
	const chatHistory = document.getElementById('chat-history');
	const userInput = document.getElementById('user-input') as HTMLInputElement;
	
	function addMessageToChat(sender: string, message: string) {
		if (!chatHistory) return;

		const messageDiv = document.createElement('div');
		messageDiv.className = `flex ${sender === 'user' ? 'justify-end' : 'justify-start'}`;
		
		messageDiv.innerHTML = `
			<div class="flex items-start gap-2 max-w-[80%] ${sender === 'user' ? 'flex-row-reverse' : ''}">
				<div class="p-2 rounded-lg ${sender === 'user' ? 'bg-primary text-white' : 'bg-white'}">
					<p>${message}</p>
				</div>
				<div class="w-8 h-8 rounded-full flex items-center justify-center ${
					sender === 'user' ? 'bg-[#1a1a1a]' : 'bg-[#e9ecef]'
				}">
					${sender === 'user' 
						? '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>'
						: '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="#4B5563" stroke-width="2"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"/><path d="M19 10v2a7 7 0 0 1-14 0v-2"/><line x1="12" y1="19" x2="12" y2="23"/><line x1="8" y1="23" x2="16" y2="23"/></svg>'
					}
				</div>
			</div>
		`;

		chatHistory.appendChild(messageDiv);
		chatHistory.scrollHeight;
	}

	function initializeChat() {
		if (!form || !userInput) return;

		form.addEventListener('submit', async (e) => {
			e.preventDefault();
			const message = userInput.value.trim();
			if (!message) return;

			addMessageToChat('user', message);
			userInput.value = '';

			try {
				const response = await fetch('/api/chatbot', { 
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify({ message }) 
				});
				const data = await response.json();
				addMessageToChat('bot', data.reply || 'Something went wrong!');
			} catch (error) {
				console.error('Chat error:', error);
				addMessageToChat('bot', 'Error: Unable to process your request.');
			}
		});
	}

	// Initialize the chat
	initializeChat();
</script>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	:root {
		--primary: #3B82F6;
		--primary-dark: #2563EB;
	}

	.bg-primary {
		background-color: var(--primary);
	}

	.hover\:bg-primary-dark:hover {
		background-color: var(--primary-dark);
	}

	.ring-primary {
		--tw-ring-color: var(--primary);
	}
</style>
